       ============================封装和继承===============================
       
一、封装？   

      概念：就是将指定的内容（类、接口....方法）进行固定的一个隐藏。保持一定的独立性。
      
                封装具体体现为：
          
          1、一个项目project在封装多个package包，在包中我们封装类各种类、接口...等。在类中封装属性和方法。方法中封装代码。  
          
          2、在开发的过程中，将一些公共的代码进行提取，定义为一些类，在类中以方法的形式存在。
              
    注意！封装的使用不仅仅是体现在代码的层面，会体现在设计的各个方方面面。比如保持系统的相对独立性，重用性。 

二、继承？

   1、何为继承：
   
            同现实生活中一样，继承就是将父亲的东西继承到儿子这里。
     
            在程序中，父亲和儿子 其实都是 类class。父亲就称为“父类” ， 儿子称为“子类”。
            
            如果想实现继承的关系可以使用extends关键字来实现。那么子类中就可以拥有父类中【可以被拥有】的属性和方法。
            
   2、继承的语法实现：
   
     class  子类名称   extends  父类名称{
        .............
     }
     
           注意：子类继承了父类，将父类中可以被继承的属性和方法拿到子类中了。父类中使用的不同修饰符，可以进行属性和方法的保留。
       
     a、private修饰的属性和方法是不能被继承的。
     
     b、protected修饰的属性和方法时可以被继承的（哪怕是跨包的情况下）。      
     
     
           使用继承后，与构造函数的关系：super关键字
      
           自定义的任意的一个类或者是Java中的任意的一个类，如果没有直接使用extends关键字的情况下，默认的是extends Object。
           
     Object是java内部提供的一个描述所有的对象的类。 Object类被称为“祖先类”。所有的类都是直接或者间接性的继承了Object类。
     
     super关键字的含义：
     
        2.1、super就是用于具有父子关系的场景之中。
        
        2.2、super就是在子类中调用父类中相应的构造方法。
        
        2.3、super可以访问父类中的属性。
        
        2.4、super可以访问父类中的方法。
        
        2.5、super是不能使用在静态的方法或者语句块中的。
        
        
        学会进行this  和  super   的对比学习。
        
        使用场景 、 调用构造 、 访问属性 、 调用方法

========================异常=========================
一、异常的定义（啥是异常）？

二、Java中处理异常的机制（所涉及到的几个关键字）？

   try 、 catch 、 finally 、 throw  、 throws
   
   
   try--catch的用法
   
   try{
             被监测的代码....
   }catch(异常类型  e){
            处理...
   }
   
       针对被监测的代码存在多种异常的时候，可以并列的使用多个catch进行捕获。但是需要注意：不能将最大的异常型号放在最前面。
   
   try--catch---finally的用法
   
   try{
             被监测的代码....
   }catch(异常类型  e){
            处理...
   }finally{
            不管是否产生异常都必须要执行的代码部分.....(一般是用于进行资源的释放)
   }
   
   
   

三 、 异常的体系结构？

    |----Object类
    
         |------Throwable类
         
                |-------Exception类
                
                |-------Error类
                
    
          结论：
          
     1、在Java语言中所有的错误和异常都是Throwable类型。
     
     2、Error 和 Exception是两个不同的事物。
     
        a、Error错误。是程序员无能为力的：比如：内存溢出、网络断
        
        b、Exception异常。 程序运行过程中不正常，这种是可以通过程序进行解决的。
        
            在Java中我们谈论的一定只是异常。而不是错误。
            
            在所有的编程语言中，是提供的异常类型最为丰富的一种语言。     
        
四、学习和了解更多的异常型号？

       认识了更多的异常及型号，有助于在程序中找出相应的问题。重写调整我们的代码，让程序变得更为健壮和安全。
       
       
   NullPointerException :空指针异常，只要对null对象进行使用（访问 和 调用方法），就会抛出空指针异常。
   
   ClassCastException :类型转换异常，强制转换的类型不匹配。
   
   ArrayIndexOutOfBoundsException ：数组下标越界异常。
   
   NumberFormatException ： 数字格式化异常。
   
   ..................平时在写代码的过程中进行积累
   
   
五、异常的分类?

          检查性异常（显示异常）：编写代码的过程中会提示你进行异常的处理。必须要处理。不进行处理代码都是错的。
          
          运行时异常（隐性异常）：是在程序执行的过程中才会暴露出来的异常。  这种异常其实是不建议进行处理（会降低性能）。
          
六、自定义异常？

         1、自定义一个类继承Throwable | Excetpion | RuntimeException
         
         2、定义相应的构造，并且调用父类中相应的构造。
         
         3、在程序中进行使用 throw new 自定义的异常类();
        
